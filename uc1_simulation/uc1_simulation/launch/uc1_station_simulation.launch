<?xml version="1.0"?>
<launch>
    <arg name="limited" default="true"/>
    <arg name="paused" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="scene_file" default="$(find uc1_simulation)/scene/table.scene"/> 

    <arg name="right_ns" default="right_arm"/>
    <arg name="right_y" default="-0.470"/>    
    <arg name="right_z" default="0.655"/>
    <arg name="right_Y" default="-1.57"/>  
    <arg name="right_tool" default="'true'"/>
    
    <arg name="left_ns" default="left_arm"/>
    <arg name="left_y" default="0.470"/>
    <arg name="left_z" default="0.655"/>     
    <arg name="left_Y" default="1.57"/>  
    <arg name="left_tool" default="true"/>
    
    <!--To launch RVIZ set the value to true-->
    <arg name="rviz" value="true"/>

    <!-- SET GAZEBO MODEL PATH -->
    <!-- REMEMBER TO CHANGE THIS TO POINT TO LOCAL PATH -->
    <env name="GAZEBO_MODEL_PATH" value="$(find uc1_simulation)/models/"/>

    <!-- startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="paused" value="$(arg paused)"/>
        <arg name="gui" value="$(arg gui)"/>
    </include>

    <node name="spawn_gazebo_Table" pkg="gazebo_ros" type="spawn_model" args="-sdf -file $(find uc1_simulation)/models/Table/model.sdf -model Table -x 0.0 -y 0.0 -z 0.0" respawn="false" output="screen" />

    <node name="spawn_gazebo_Q1" pkg="gazebo_ros" type="spawn_model" args="-sdf -file $(find uc1_simulation)/models/Q1/model.sdf -model Q1 -x 0.0 -y 0.0 -z 0.651  -Y 0" respawn="false" output="screen" />

    <group ns="$(arg left_ns)">
        
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find uc1_simulation)/xacro/ur5.urdf.xacro' ns:=$(arg left_ns) y:=$(arg left_y) z:=$(arg left_z) Z:=$(arg left_Y) screwdriver:=$(arg left_tool)" />
        
        <node name="spawn_gazebo_robot" pkg="gazebo_ros" type="spawn_model" args="-robot_namespace $(arg left_ns) -urdf -param /$(arg left_ns)/robot_description -model $(arg left_ns) -J shoulder_pan_joint 0.0 -J shoulder_lift_joint -0.767 -J elbow_joint -1.767 -J wrist_1_joint -2.367 -J wrist_2_joint 1.567 -J wrist_3_joint 0.0" respawn="false" output="screen" />
    
        <include file="$(find move_rt)/launch/controller_utils.launch">
            <arg name="tf_prefix" value="$(arg left_ns)"/>
        </include>
        
        <rosparam file="$(find move_rt)/controllers/arm_controller_ur5.yaml" command="load"/> 
        <node name="arm_velocity_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_velocity_controller" respawn="false" output="screen"/>
        
        <rosparam file="$(find uc1_simulation)/config/tasks_$(arg left_ns).yaml" command="load"/>    
        <node pkg="move_rt" type="move_rt" name="move_rt" launch-prefix="xterm -e gdb -ex=run - -args"/>
        
        <node pkg="tf" type="static_transform_publisher" name="$(arg left_ns)_broadcaster" args="0 0 0 0 0 0 world $(arg left_ns)/world 100" />
        
        <include file="$(find station_moveit_config)/launch/move_group.launch"/> <!-- IMPORTANT!!! set world as base link in xacro/ur5.srdf --> <!-- OPTIONAL: set allow_trajectory execution to false in move_group.launch -->

    </group>

    <group ns="$(arg right_ns)">        
        
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find uc1_simulation)/xacro/ur5.urdf.xacro' ns:=$(arg right_ns) y:=$(arg right_y) z:=$(arg right_z) Z:=$(arg right_Y) gripper:=$(arg right_tool)" />
        
        <node name="spawn_gazebo_robot" pkg="gazebo_ros" type="spawn_model" args="-robot_namespace $(arg right_ns) -urdf -param /$(arg right_ns)/robot_description -model $(arg right_ns) -J shoulder_pan_joint 0.0 -J shoulder_lift_joint -0.767 -J elbow_joint -1.767 -J wrist_1_joint -2.367 -J wrist_2_joint 1.567 -J wrist_3_joint 0.0" respawn="false" output="screen" />
    
        <include file="$(find move_rt)/launch/controller_utils.launch">
            <arg name="tf_prefix" value="$(arg right_ns)"/>
        </include>

        <rosparam file="$(find move_rt)/controllers/arm_controller_ur5.yaml" command="load"/> 
        <node name="arm_velocity_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_velocity_controller" respawn="false" output="screen"/>
        
        <rosparam file="$(find uc1_simulation)/config/tasks_$(arg right_ns).yaml" command="load"/>    
        <node pkg="move_rt" type="move_rt" name="move_rt" launch-prefix="xterm -e gdb -ex=run --args"/>
        
        <node pkg="tf" type="static_transform_publisher" name="$(arg right_ns)_broadcaster" args="0 0 0 0 0 0 world $(arg right_ns)/world  100" />
        
        <include file="$(find station_moveit_config)/launch/move_group.launch"/> <!-- IMPORTANT!!! set world as base link in xacro/ur5.srdf --> <!-- OPTIONAL: set allow_trajectory execution to false in move_group.launch -->

    </group>  
   
    <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>

    <node pkg="rosservice" type="rosservice" name="start_sim" args="call --wait /gazebo/unpause_physics" />


    <group if="$(arg rviz)">
        <arg name="rvizconfig" default="$(find uc1_simulation)/config/uc1_simulation.rviz" />
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true"/>
    </group>

</launch>
